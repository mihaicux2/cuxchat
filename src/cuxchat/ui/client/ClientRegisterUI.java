/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cuxchat.ui.client;

import cuxchat.ChatClient;
import cuxchat.CuxItem;
import cuxchat.CuxMessage;
import cuxchat.ui.client.ClientLoginUI;
import cuxchat.utils.CuxImageFIleFilter;
import cuxchat.utils.CuxLogger;
import cuxchat.utils.CuxMessenger;
import cuxchat.utils.CuxStringEncrypter;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.codehaus.jackson.JsonNode;
import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.map.SerializationConfig;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author mihaicux
 */
public class ClientRegisterUI extends javax.swing.JFrame {

    private HashMap<String, ArrayList<CuxItem<Integer>>> lists = new HashMap<String, ArrayList<CuxItem<Integer>>>();
    String fileName = "avatar.png";
    String fileExtension = "png";
    
    /**
     * Creates new form ClientRegisterUI
     */
    public ClientRegisterUI() {
        initComponents();
        initDropdowns();        
    }

    private void initDropdowns(){
        CuxItem<Integer> blank = new CuxItem<Integer>(0, "");
        countryDD.addItem(blank);

        lists.put("", new ArrayList<CuxItem<Integer>>());
        
        try {
            File fXmlFile = new File(getClass().getResource("/cuxchat/lists/lists.xml").getFile());
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(fXmlFile);

            //optional, but recommended
            //read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
            doc.getDocumentElement().normalize();

            Element root = doc.getDocumentElement();
            NodeList countryList = ((Element)root.getElementsByTagName("countries").item(0)).getElementsByTagName("country");
            for (int i = 0; i < countryList.getLength(); i++) {
                Node countryEl = countryList.item(i);
                Element eCountryEl = (Element) countryEl;
                Integer countryID = Integer.parseInt(eCountryEl.getAttribute("id"));
                String countryName = eCountryEl.getElementsByTagName("name").item(0).getTextContent();
                CuxItem<Integer> entry = new CuxItem<Integer>(countryID, countryName);
                countryDD.addItem(entry);
                ArrayList<CuxItem<Integer>> cities = new ArrayList<CuxItem<Integer>>();
                NodeList cityList = ((Element)eCountryEl.getElementsByTagName("cities").item(0)).getElementsByTagName("city");
                for (int k = 0; k < cityList.getLength(); k++) {
                    Node cityEl = cityList.item(k);
                    Element eCityEl = (Element) cityEl;
                    Integer cityID = Integer.parseInt(eCityEl.getAttribute("id"));
                    CuxItem<Integer> cityEntry = new CuxItem<Integer>(cityID, eCityEl.getTextContent());
                    cities.add(cityEntry);
                }
                lists.put(countryName, cities);
            }
        } catch (Exception ex) {
            CuxLogger.getInstance().logException2(ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        firstNameTxt = new javax.swing.JTextField();
        lastNameTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        phoneTxt = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        userTxt = new javax.swing.JTextField();
        passTxt = new javax.swing.JPasswordField();
        pass2Txt = new javax.swing.JPasswordField();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTxt = new javax.swing.JTextArea();
        streetTxt = new javax.swing.JTextField();
        countryDD = new javax.swing.JComboBox();
        cityDD = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        hostText = new javax.swing.JTextField();
        portText = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        registerBtn = new javax.swing.JButton();
        loginBtn = new javax.swing.JButton();
        quitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Account Info"));

        jLabel1.setText("First Name*");

        jLabel2.setText("Last Name*");

        jLabel3.setText("Email Address*");

        firstNameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitForm(evt);
            }
        });

        lastNameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitForm(evt);
            }
        });

        emailTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitForm(evt);
            }
        });

        jLabel11.setText("Phone Number*");

        phoneTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitForm(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNameTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(emailTxt)
                    .addComponent(phoneTxt)
                    .addComponent(firstNameTxt))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(firstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(phoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Login Info"));

        jLabel8.setText("Username*");

        jLabel9.setText("Password*");

        jLabel10.setText("Repeat Password*");

        userTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitForm(evt);
            }
        });

        passTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitForm(evt);
            }
        });

        pass2Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitForm(evt);
            }
        });

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cuxchat/images/avatar.png"))); // NOI18N
        jLabel14.setAlignmentX(5.0F);
        jLabel14.setAlignmentY(5.0F);
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("AVATAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(passTxt)
                    .addComponent(pass2Txt)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(userTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(passTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pass2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));

        jLabel4.setText("Country");

        jLabel5.setText("City");

        jLabel6.setText("Street");

        jLabel7.setText("Full Address :");

        addressTxt.setColumns(20);
        addressTxt.setRows(5);
        jScrollPane1.setViewportView(addressTxt);

        streetTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitForm(evt);
            }
        });

        countryDD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                countryDDItemStateChanged(evt);
            }
        });

        cityDD.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(streetTxt)
                            .addComponent(countryDD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cityDD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(countryDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cityDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(streetTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Server Info"));

        jLabel12.setText("Hostname*");

        jLabel13.setText("Port*");

        hostText.setText("127.0.0.1");
        hostText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hostTextformSubmit(evt);
            }
        });

        portText.setText("9800");
        portText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                portTextformSubmit(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(portText, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(hostText))
                .addContainerGap(387, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(hostText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(portText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        registerBtn.setForeground(javax.swing.UIManager.getDefaults().getColor("Nb.ScrollPane.Border.color"));
        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        loginBtn.setForeground(javax.swing.UIManager.getDefaults().getColor("ToolBar.dockingForeground"));
        loginBtn.setText("LogIn");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        quitBtn.setText("QUIT");
        quitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registerBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(registerBtn)
                .addComponent(loginBtn)
                .addComponent(quitBtn))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        this.dispose();
        this.setVisible(false);
        javax.swing.JFrame loginBox = new ClientLoginUI();
        loginBox.setTitle("CuxChat Client - v.0.1.1 | LOGIN");
        loginBox.setVisible(true);
    }//GEN-LAST:event_loginBtnActionPerformed

    private void handlerQuit(){
        int ret = CuxMessenger.getInstance().popUpConfirm("Are you sure you want to exit?", "Exit", JOptionPane.YES_NO_OPTION);
        if (ret == JOptionPane.OK_OPTION){
            this.dispose();
            this.setVisible(false);
            System.exit(0);
        }
    }
    
    private void quitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitBtnActionPerformed
        handlerQuit();
    }//GEN-LAST:event_quitBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        handlerQuit();
    }//GEN-LAST:event_formWindowClosing

    private void countryDDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_countryDDItemStateChanged
//        CuxMessenger.getInstance().popUp(evt.getItem() + " " + evt.getStateChange(), CuxMessenger.LEVEL_INFO);
        if (evt.getStateChange() == 1){ // new element
            populateCityDD(evt.getItem().toString());
        }
        
    }//GEN-LAST:event_countryDDItemStateChanged

    private void submitForm(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_submitForm
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10){ // enter
            this.registerBtnActionPerformed(null);
        }
    }//GEN-LAST:event_submitForm

    private HashMap<String, String> getRegister(){
        
        HashMap<String, String> ret = new HashMap<String, String>();
        ret.put("host", hostText.getText().trim());
        ret.put("port", portText.getText().trim());
        ret.put("firstName", firstNameTxt.getText().trim());
        ret.put("lastName", lastNameTxt.getText().trim());
        ret.put("email", emailTxt.getText().trim());
        ret.put("phone", phoneTxt.getText().trim());
        ret.put("street", streetTxt.getText().trim());
        ret.put("address", addressTxt.getText().trim());
        ret.put("user", userTxt.getText().trim());
        ret.put("pass", passTxt.getText().trim());
        ret.put("pass2", pass2Txt.getText().trim());
        
        return ret;
        
    }
    
    private boolean checkCredentials(HashMap<String, String> credentials){
        
        if (credentials.get("host").equals("")) {
            CuxMessenger.getInstance().popUp("Enter server address", CuxMessenger.LEVEL_WARNING);
            hostText.requestFocus();
            return false;
        }
        if (Integer.parseInt(credentials.get("port")) == 0) {
            CuxMessenger.getInstance().popUp("Enter server port", CuxMessenger.LEVEL_WARNING);
            portText.requestFocus();
            return false;
        }
        if (credentials.get("firstName").equals("")){
            CuxMessenger.getInstance().popUp("Enter first name", CuxMessenger.LEVEL_WARNING);
            firstNameTxt.requestFocus();
            return false;
        }
        if (credentials.get("lastName").equals("")){
            CuxMessenger.getInstance().popUp("Enter last name", CuxMessenger.LEVEL_WARNING);
            lastNameTxt.requestFocus();
            return false;
        }
        if (credentials.get("email").equals("")){
            CuxMessenger.getInstance().popUp("Enter email", CuxMessenger.LEVEL_WARNING);
            emailTxt.requestFocus();
            return false;
        }
        if (credentials.get("phone").equals("")){
            CuxMessenger.getInstance().popUp("Enter phone", CuxMessenger.LEVEL_WARNING);
            phoneTxt.requestFocus();
            return false;
        }
        if (credentials.get("user").equals("")){
            CuxMessenger.getInstance().popUp("Enter username", CuxMessenger.LEVEL_WARNING);
            userTxt.requestFocus();
            return false;
        }
        if (credentials.get("pass").equals("")){
            CuxMessenger.getInstance().popUp("Enter password", CuxMessenger.LEVEL_WARNING);
            passTxt.requestFocus();
            return false;
        }
        if (credentials.get("pass2").equals("")){
            CuxMessenger.getInstance().popUp("Enter password confirmation", CuxMessenger.LEVEL_WARNING);
            pass2Txt.requestFocus();
            return false;
        }
        // password conform
        if (!credentials.get("pass").equals(credentials.get("pass2"))){
            CuxMessenger.getInstance().popUp("Passwords do not match", CuxMessenger.LEVEL_WARNING);
            pass2Txt.requestFocus();
            return false;
        }
        return true;
        
    }
    
    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        // TODO add your handling code here:        
        Integer countryID = 0,
                cityID = 0;
        
        CuxItem<Integer> country = (CuxItem<Integer>)countryDD.getSelectedItem();
        if (country != null) countryID = country.getValue();
        
        CuxItem<Integer> city = (CuxItem<Integer>)cityDD.getSelectedItem();
        if (city != null) cityID = city.getValue();
        
        
        HashMap<String, String> credentials = this.getRegister();
        
        if (!this.checkCredentials(credentials)) return;
        
        try{
            CuxStringEncrypter desEncrypter = new CuxStringEncrypter();
            
            CuxMessage msg = new CuxMessage("REGISTER");
            msg.put("firstName", credentials.get("firstName"));
            msg.put("lastName", credentials.get("lastName"));
            msg.put("email", credentials.get("email"));
            msg.put("phone", credentials.get("phone"));
            msg.put("country", countryID);
            msg.put("city", cityID);
            msg.put("street", credentials.get("street"));
            msg.put("address", credentials.get("address"));
            msg.put("username", credentials.get("user"));
            msg.put("password", credentials.get("pass"));
            //msg.put("image", credentials.get("image"));
            
            Icon icon = jLabel14.getIcon();
            BufferedImage bi = new BufferedImage(
            icon.getIconWidth(),
            icon.getIconHeight(),
            BufferedImage.TYPE_INT_RGB);
            Graphics g = bi.createGraphics();
            // paint the Icon to the BufferedImage.
            icon.paintIcon(null, g, 0,0);
            g.dispose();
            byte[] imageInByte = null;
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            try {
                ImageIO.write( bi, fileExtension, baos );
                baos.flush();
                imageInByte = baos.toByteArray();
            } catch (IOException ex) {
                CuxLogger.getInstance().logException2(ex);
            }

            msg.put("image", imageInByte); 
            msg.put("fileName", fileName);
            msg.put("fileExtension", fileExtension);
            
            String registerCredentials = desEncrypter.encrypt(msg.toString());
            
            final Socket cs = new Socket(credentials.get("host"), Integer.parseInt(credentials.get("port")));
            final DataInputStream dis = new DataInputStream(cs.getInputStream());
            final DataOutputStream dos = new DataOutputStream(cs.getOutputStream());
            
//            dos.write(registerCredentials.getBytes("utf-8"));
            
            dos.writeUTF(registerCredentials);
            String responce = dis.readUTF();
            
            ObjectMapper mapper = new ObjectMapper();
            mapper.disable(SerializationConfig.Feature.FAIL_ON_EMPTY_BEANS);
            JsonNode actualObj = mapper.readTree(desEncrypter.decrypt(responce));
            String subject = actualObj.get("subject").asText();
//                String body = actualObj.get("body").asText();
            JsonNode body = actualObj.get("body");
            
            switch (subject){
                case "REGISTER_NOK":
                    CuxMessenger.getInstance().popUp("Eroare la inregistrare", CuxMessenger.LEVEL_ERROR);
                    break;
                case "ERROR":
                    String errMsg = body.get("message").asText();
                    CuxMessenger.getInstance().popUp(errMsg, CuxMessenger.LEVEL_ERROR);
                    break;
                case "REGISTER_DUPLICATE":
                    String duplMsg = body.get("message").asText();
                    CuxMessenger.getInstance().popUp(duplMsg, CuxMessenger.LEVEL_WARNING);
                    break;
                case "REGISTER_OK":
                    CuxMessenger.getInstance().popUp("Inregistrare reusita", CuxMessenger.LEVEL_INFO);
                    this.dispose();
                    this.setVisible(false);
                    loginBtnActionPerformed(null);
//                    new ChatClient(cs, credentials.get("user")).start();
                    break;
            }
        }
        catch (Exception e) {
            CuxMessenger.getInstance().popUp("Cannot connect to server", CuxMessenger.LEVEL_EXCEPTION);
            CuxLogger.getInstance().logException2(e);
        }
        
    }//GEN-LAST:event_registerBtnActionPerformed

    private void hostTextformSubmit(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostTextformSubmit
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10){ // enter
            this.loginBtnActionPerformed(null);
        }
    }//GEN-LAST:event_hostTextformSubmit

    private void portTextformSubmit(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_portTextformSubmit
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10){ // enter
            this.loginBtnActionPerformed(null);
        }
    }//GEN-LAST:event_portTextformSubmit

    public static BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }
    
    public static String getFileExtension(File file) {
        String fileName = file.getName();
        if(fileName.lastIndexOf(".") != -1 && fileName.lastIndexOf(".") != 0)
            return fileName.substring(fileName.lastIndexOf(".")+1).toLowerCase();
        else return "";
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();
        CuxImageFIleFilter filter1 = new CuxImageFIleFilter("PNG, GIF, JPG and JPEG", new String[] {"PNG", "GIF", "JPG", "JPEG" });
        fc.setFileFilter(filter1);
        int returnVal = fc.showOpenDialog(ClientRegisterUI.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            
            fileExtension = getFileExtension(file);
            fileName = file.getName();
            
            //This is where a real application would open the file.
//            log.append("Opening: " + file.getName() + "." + newline);
            BufferedImage bi;
            try
            {   //display the image in jlabel
                bi=ImageIO.read(file);
                jLabel14.setIcon(new ImageIcon(ClientRegisterUI.resize(bi, 80, 60)));
            }
            catch(IOException e)
            {

            }
        } else {
            System.out.println("Operation canceled by user");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cuxchat/images/avatar.jpg"))); // NOI18N
    }//GEN-LAST:event_jButton2ActionPerformed

    private void populateCityDD(String countryName){
//        System.out.println(countryName);
        ArrayList<CuxItem<Integer>> cities = lists.get(countryName);
        cityDD.removeAllItems();
        if (cities == null) return;
        for (int i = 0; i < cities.size(); i++){
            cityDD.addItem(cities.get(i));
        }
    }
    
    public static void main(String[] args) throws IOException {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                // From Ubuntu 14.04 LTS, Java(TM) SE Runtime Environment (build 1.7.0_76-b13) :
                // Metal, Nimbus, CDE/Motif, GTK+
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ClientLoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            CuxLogger.getInstance().logException2(ex);
        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ClientLoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            CuxLogger.getInstance().logException2(ex);
        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ClientLoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            CuxLogger.getInstance().logException2(ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ClientLoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            CuxLogger.getInstance().logException2(ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                javax.swing.JFrame loginBox = new ClientRegisterUI();
                loginBox.setTitle("CuxChat Client - v.0.1.1 | REGISTER");
                loginBox.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addressTxt;
    private javax.swing.JComboBox cityDD;
    private javax.swing.JComboBox countryDD;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JTextField firstNameTxt;
    private javax.swing.JTextField hostText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameTxt;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField pass2Txt;
    private javax.swing.JPasswordField passTxt;
    private javax.swing.JTextField phoneTxt;
    private javax.swing.JTextField portText;
    private javax.swing.JButton quitBtn;
    private javax.swing.JButton registerBtn;
    private javax.swing.JTextField streetTxt;
    private javax.swing.JTextField userTxt;
    // End of variables declaration//GEN-END:variables
}
